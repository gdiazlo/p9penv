#!/usr/bin/env rc

umask 077

# assume the parent shell set up a HOME and USER variable
# correctly, in case of using rc as a login shell
# this might not work
home=$HOME
user=$USER

path=(/usr/sbin /sbin /usr/local/bin /bin /usr/bin)

fn nssetup {
	if(9 test ! -d $home/.ns/$1) {
		mkdir -p $home/.ns/$1
	}
	echo $home/.ns/$1
}

# set plan9 environment
PLAN9=/usr/local/plan9
P9PENV=$home/.local/p9penv

# mk max concurrent procs
nproc=16

# set golang environment
GOVERSION=1.18.3
GOROOT=$home/.local/go/$GOVERSION
GOPATH=$home/go
GO111MODULE=on

# set java environmant
JAVA_VERSION=11.0.11
JAVA_HOME=$home/.local/java/jdk/$JAVA_VERSION

# set scala environment
SBT_VERSION=1.5.2
SBT_HOME=$home/.local/java/sbt/$SBT_VERSION

# set Maven Home
MVN_VERSION=3.8.1
MVN_HOME=$home/.local/java/mvn/$MVN_VERSION

# set rust environment
CARGO=$home/.cargo

# set ocaml environment
OCAML=$home/.opam/4.11.1
OPAM_SWITCH_PREFIX=$OCAML
CAML_LD_LIBRARY_PATH=$home/.opam/4.11.1/lib/stublibs:$home/.opam/4.11.1/lib/ocaml/stublibs:$home/.opam/4.11.1/lib/ocaml
OCAML_TOPLEVEL_PATH=$home/.opam/4.11.1/lib/toplevel
MANPATH=:$home/.opam/4.11.1/man

# set acme environment
usebigarrow=1
EDITOR=editinacme
PAGER=nobs

# things for xterm
# set cursor to a steady bar |
# printf '\033[6 q'
# set cursor to a steady block
# echo -e -n '\x1b[\x30 q'
# GNUTERM='sixelgd size 1280,720 truecolor font 'DEC Terminal Modern' 14'

# set aliases
fn tb { nc termbin.com 9999 }

# Prepare PATH environment
#   append custom tools at the end of the current path
#   prepend ~/bin and goroot into path to avoid using gcc-go in system path by default
pathappend=($P9PENV/mail $GOPATH/bin $PLAN9/bin/upas $JAVA_HOME/bin $SBT_HOME/bin $MVN_HOME/bin  $CARGO/bin)
pathprepend=($P9PENV/bin $PLAN9/bin $home/.local/bin $GOROOT/bin $OCAML/bin)
path=($pathprepend $path $pathappend)

# check if something is not there
dirs=($home/lib $PLAN9 $P9PENV)
for(dir in $dirs) {
	if(9 test  ! -r $dir) {
		echo $dir 'does not exists. Verify set up.'
		exit
	}
}

files=($home/lib/plumbing)
for(f in $files) {
	if (9 test ! -f $f) {
		echo $f 'does not exists. Verify set up'
	}
}

NAMESPACE=`{nssetup 0}

# ssh agent set up

SSH_ENV=$home/.ssh/environment

fn export {}

fn startsshagent {
	echo 'Initialising new SSH agent...'
	/usr/bin/ssh-agent | sed 's/^echo/#echo/' > $SSH_ENV
	echo succeeded
	chmod 600 $SSH_ENV
	. $SSH_ENV> /dev/null
	/usr/bin/ssh-add;
}

# Source SSH settings, if applicable

if(test -f $SSH_ENV) {
	. $SSH_ENV> /dev/null
	pgrep ssh-agent > /dev/null
	switch($status) {
		case 1
			startsshagent
	}
}
if not {
    startsshagent
}
ps1='
➜ '
# set cd to execute awd when in acme win
fn cd  {
        builtin cd $* &&
        switch($TERM) {
		case xterm-256color
		case dumb
			if ( test -x /usr/local/bin/starship) {
				TERM=xterm
				text=`{starship prompt -P `{pwd} }
				TERM=dumb
			}
			if not {
				text=`{pwd}
			}
			prompt=( $"text^$ps1  '➜')
			awd
       }
}


fn _set_font {
	family=$1
	shift
	size=$1
	shift
	hidpi=$1
	shift

	switch($family) {
	case dejavu
		mono='DejaVuSansMono'
		sans='DejaVuSans'
	case go
		mono='GoMono'
		sans='GoRegular'
	case cmu
		mono='CMUTypewriter-Regular'
		sans='CMUSansSerif-Regular'
	case ibm
		mono='IBMPlexMono'
		sans='IBMPlexSans'
	case fira
		mono='FiraMono-Regular'
		sans='FiraSans-Regular'
	case terminus
		mono='TerminusTTF'
		sans='TerminusTTF'
	case book
		mono='GoMono'
		sans='Bitter-Regular'
	case ibarra
		mono='CMUTypewriter-Regular'
		sans='IbarraRealNova-SemiBold'
	case input-condensed
		mono='InputMonoCondensed-Regular'
		sans='InputSansCondensed-Regular'
	case input
		mono='InputMono-Regular'
		sans='InputSans-Regular'
	case noto
		mono='NotoSansMono-Regular'
		sans='NotoSans-Regular'
	case adobe
		mono='SourceCodePro-Regular'
		sans='SourceSansPro-Regular'
	case *
		mono='DejaVuSansMono'
		sans='DejaVuSans'
	}

	fixedfont='/mnt/font/'$mono'/'$size'a/font'
	font='/mnt/font/'$sans'/'$size'a/font'
	hidpifixedfont='/mnt/font/'$mono'/'$hidpi'a/font'
	hidpifont='/mnt/font/'$sans'/'$hidpi'a/font'
}

# start new p9p session
# start factotum before secstore so it does not prompt for a password
# load secrets manually using ipso
fn p9p_session {
	NAMESPACE=`{namespace}
	mkdir -p $NAMESPACE

	for(proc in fontsrv factotum secstored plumber) {
		pgrep '^'^$proc > /dev/null
		switch($status) {
			case 1
				$PLAN9/bin/9 $proc &
		}
	}
}

# default font is dejavu sans
# _set_font default 8 16
_set_font dejavu 12 12

# always set up the p9p session,
# this will start services only if there are not started yet
p9p_session

# default acme options
fn acme {
	SHELL=rc $PLAN9/bin/acme -a -c 1 -f $font,$hidpifont -F $fixedfont,$hidpifixedfont $*
}
